{"version":3,"sources":["createEntry.js"],"names":["chai","use","chaiHttp","should","it","done","entry","id","Title","request","app","post","send","end","error","response","have","status","body","result","be","a","property","eql","Incompleteentry","errors"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEAA,eAAKC,GAAL,CAASC,kBAAT;AACAF,eAAKG,MAAL;AACA,qBAAS,kCAAT,EAA6C,YAAM;AACjD,uBAAS,eAAT,EAA0B,YAAM;AAC9BC,OAAG,iDAAH,EAAsD,UAACC,IAAD,EAAU;AAC9D,UAAMC,QAAQ;AACZC,YAAI,CADQ;AAEZC,eAAO,eAFK;AAGZF,eAAO;AAHK,OAAd;AAKAN,qBAAKS,OAAL,CAAaC,aAAb,EACGC,IADH,CACQ,iBADR,EAEGC,IAFH,CAEQN,KAFR,EAGGO,GAHH,CAGO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBA,iBAASZ,MAAT,CAAgBa,IAAhB,CAAqBC,MAArB,CAA4B,GAA5B;AACAF,iBAASG,IAAT,CAAcC,MAAd,CAAqBhB,MAArB,CAA4BiB,EAA5B,CAA+BC,CAA/B,CAAiC,OAAjC;AACAN,iBAASG,IAAT,CAAcf,MAAd,CAAqBa,IAArB,CAA0BM,QAA1B,CAAmC,SAAnC,EAA8CC,GAA9C,CAAkD,4BAAlD;AACAlB;AACD,OARH;AASD,KAfD;AAgBAD,OAAG,6CAAH,EAAkD,UAACC,IAAD,EAAU;AAC1D,UAAMmB,kBAAkB;AACtBjB,YAAI,CADkB;AAEtBC,eAAO;AAFe,OAAxB;AAIAR,qBAAKS,OAAL,CAAaC,aAAb,EACGC,IADH,CACQ,iBADR,EAEGC,IAFH,CAEQY,eAFR,EAGGX,GAHH,CAGO,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACxBA,iBAASZ,MAAT,CAAgBa,IAAhB,CAAqBC,MAArB,CAA4B,GAA5B;AACAF,iBAASG,IAAT,CAAcO,MAAd,CAAqBnB,KAArB,CAA2BH,MAA3B,CAAkCoB,GAAlC,CAAsC,sBAAtC;AACAlB;AACD,OAPH;AAQD,KAbD;AAcD,GA/BD;AAgCD,CAjCD","file":"createEntry.js","sourceRoot":"/home/shine/intro/My-Diary/server/test","sourcesContent":["import chaiHttp from 'chai-http';\nimport chai from 'chai';\nimport { describe } from 'mocha';\nimport app from '../../app';\n\nchai.use(chaiHttp);\nchai.should();\ndescribe('TESTING CREATE AN ENTRY ENDPOINT', () => {\n  describe('post /entries', () => {\n    it('should create a SINGLE entry on /entries/ POST ', (done) => {\n      const entry = {\n        id: 4,\n        Title: 'The evil ones',\n        entry: 'The eldest son, born with a heart as black as charcoal',\n      };\n      chai.request(app)\n        .post('/api/v1/entries')\n        .send(entry)\n        .end((error, response) => {\n          response.should.have.status(201);\n          response.body.result.should.be.a('array');\n          response.body.should.have.property('success').eql('entry created successfully');\n          done();\n        });\n    });\n    it('should return a message if entry is omitted', (done) => {\n      const Incompleteentry = {\n        id: 4,\n        Title: 'The evil ones',\n      };\n      chai.request(app)\n        .post('/api/v1/entries')\n        .send(Incompleteentry)\n        .end((error, response) => {\n          response.should.have.status(404);\n          response.body.errors.entry.should.eql('please provide entry');\n          done();\n        });\n    });\n  });\n});\n"]}